Aichernig et al.\cite{aichernig2015killing},G,test data generation,n/a,spec. (E),Y,exi.,exi.,,$\mu$-java,well,manual invest.,n/a,UML,S,S,N,
Androutsopoulos et al.\cite{androutsopoulos2014analysis},A,test strategy evaluation,n/a,others,Y,exi.,exi.,,SMT-C,well,n/a,"fixed number, weak mutation",C,"S, M",M,N,
Arcuri and Briand\cite{arcuri2011adaptive},A,test strategy evaluation,n/a,spec.,Y,exi.,exi.,,MuJava,well,  not killed as equivalent ,mutant sample,java,"P, S",S,N,
Asoudeh and Labiche\cite{asoudeh2014multi},A,test data generation,n/a,spec. (E),Y,exi.,exi.,,MAJOR,well,n/a,n/a,java,n/a,n/a,N,
Baker and Habli\cite{baker2013empirical},A,test strategy evaluation,n/a,struc. ,"Y, N","exi., hand.",exi.,hand.,MILU,well,manual invest.,n/a,"C, Ada",P,P,N,*
Bandyopadhyay and Ghosh\cite{bandyopadhyay2009test},A,test data generation,unit,spec.,Y,exi.,exi.,,MuJava,well,n/a,n/a,java,S,S,N,*
Bardin et al.\cite{bardin2015sound},G,test data generation,unit,hybrid ,Y,exi.,exi.,,MuJava,well,n/a,weak mutation,java,"P, S",S,Y,
Czemerinski et al.\cite{czemerinski2013behaviour},A,test strategy evaluation,unit,spec.,Y,exi.,exi.,,MuJava,well,no invest.,mutant sample,java,"P, S",S,Y,
Czemerinski et al.\cite{czemerinski2015behaviour} , A , test strategy evaluation , unit ,spec.,Y,exi.,exi.,, $\mu$-JAVA ,well,  not killed as equivalent , n/a, Java ,"P, S",S,Y,*
Delamare et al.\cite{delamare2011approach},A, test oracle,unit,struc. ,Y,exi.,exi.,,AjMutator,well,manual invest.,n/a,AspectJ,S,S,N,
Fraser and Walkinshaw\cite{fraser2015assessing},G,"test data generation, test strategy evaluation",unit,struc. (E),Y,"exi., part.","exi., part.",,"Javalanche, EvoSuite",well,n/a,n/a,java,"P, S",S,N,
Kanewala and Bieman\cite{kanewala2013using},A,test oracle,unit,others,Y,exi.,exi.,,$\mu$-java,well,n/a,n/a,java,P,P,N,
Khalil and Labiche\cite{khalil2010round},A,test strategy evaluation,n/a,spec.,Y,exi.,exi.,,MuJava,well,  not killed as equivalent ,n/a,java,S,S,Y,
Koster and Kao\cite{koster2007state},A,test strategy evaluation,unit,struc. (E),Y,exi.,exi.,,MuJava,well,n/a,n/a,java,S,S,Y,
Kracht et al.\cite{kracht2014empirically} , A , test data generation , unit ,struc. ,Y,exi.,exi.,, MAJOR ,well, n/a ,n/a, Java ,"S, M",M,Y,
Lou et al.\cite{lou2015mutation},G,test case prioritisation,unit,struc. (E),Y,exi.,exi.,,Javalanche,well,n/a,fixed number,java,"S, M",M,Y,
Mayer and Guderlei\cite{mayer2006random},A,"test data generation, test strategy evaluation",n/a,spec.,Y,exi.,exi.,,MuJava,well,n/a,n/a,java,n/a,n/a,N,
Mayer and Schneckenburger\cite{mayer2006empirical},A,test strategy evaluation,n/a,spec.,Y,exi.,exi.,,MuJava,well,n/a,n/a,java,n/a,n/a,N,
Mcminn et al.\cite{mcminn2015effectiveness},A,"test strategy evaluation, test data generation",other,struc. ,Y,exi.,exi.,,SchemaAnalyst,well,reduce likelihood,n/a,SQL ,n/a,n/a,N,
Milani et al.\cite{milani2014leveraging} , A , test data generation , unit ,spec.,Y,exi.,exi.,, MUTANDIS \cite{mirshokraie2013efficient} ,well,reduce likelihood, n/a, JavaScript ,"S, M",M,Y,
Miller and Strooper\cite{miller2012case},A,test strategy evaluation,n/a,spec.,"Y, N","exi., hand.",exi.,hand.,"MuJava, manual",well,manual invest.,mutant sample,java,n/a,n/a,N,
Namin and Andrews\cite{namin2009influence} , A , test strategy evaluation , unit ,struc. ,Y,exi.,exi.,, Proteum ,well,  not killed as equivalent ,fixed number,C,S,S,Y,
Offutt and Liu\cite{offutt1999generating},A,test data generation,int.,spec.,Y,exi.,exi.,,Mothra,well,no invest.,n/a,n/a,n/a,n/a,N,
Rutherford et al.\cite{rutherford2008evaluating},A,test strategy evaluation,sys.,spec.,Y,exi.,exi.,,MuJava,well,n/a,n/a,java,S,S,N,
Segura et al.\cite{segura2010automated},A,test data generation,n/a,spec.,Y,exi.,exi.,,MuClipse,well,manual invest.,n/a,java,S,S,Y,
Shi et al.\cite{shi2014balancing} ,G, test-suite reduction ,n/a,"struc., struc. (E)",Y,exi.,exi.,, PIT ,well, n/a , n/a, Java ,"P, S",S,Y,
Shrestha and Rutherford\cite{shrestha2011empirical},A,test oracle,unit,struc. ,Y,exi.,exi.,,MuJava,well,manual invest.,n/a,java,"P, S",S,Y,
Simith and Williams\cite{smith2009guiding} ,G, test data generation , unit ,struc. (E),Y,exi.,exi.,, MuClipse ,well,no invest., n/a, Java ,S,S,Y,
Smith and Williams\cite{smith2009should},G,test strategy evaluation,unit,struc. (E),Y,exi.,exi.,,"Jumble, MuClipse",well,n/a,n/a,java,S,S,N,*
Staats et al.\cite{staats2012oracle},A,test case prioritisation,unit,struc. ,Y,exi.,exi.,,Sofya,well,n/a,fixed number,java,S,S,N,
Tuya et al.\cite{tuya2010full} , A , test strategy evaluation ,other,struc. ,Y,exi.,exi.,, SQLMutation ,well,"reduce likelihood, manual invest.", n/a, SQL ,n/a,n/a,Y,
Vergilio et al.\cite{vergilio2006constraint},A,test strategy evaluation,n/a,struc. (E),Y,exi.,exi.,,Proteum,well,manual invest.,n/a,C,n/a,n/a,N,
Wang et al.\cite{wang2010correlating},A,test strategy evaluation,n/a,sim. ,Y,exi.,exi.,,MuClipse,well,  not killed as equivalent ,n/a,Java,S,S,N,*
Xie et al.\cite{xie2011testing},A,test strategy evaluation,n/a,others,Y,exi.,exi.,,MuJava,well,manual invest.,fixed number,java,n/a,n/a,Y,
Xuan and Monperrus\cite{xuan2014test} , A , fault localisation , unit ,others,Y,exi.,exi.,, PIT ,well, n/a ,fixed number, Java ,"S, M",M,Y,*
Yoo and Harman\cite{yoo2012test},A,test data generation,unit,struc. ,Y,exi.,exi.,, Mujava ,well,no invest.,n/a,Java,n/a,n/a,Y,
Zhang and Mesbah\cite{zhang2015assertions} , A , test strategy evaluation , unit ,struc. (E),Y,exi.,exi.,, PIT ,well,  not killed as equivalent , n/a, Java ,M,M,Y,
Zhang et al.\cite{zhang2009time},A,test case prioritisation,n/a,struc. ,Y,exi.,exi.,,Jester,well,n/a,fixed number,java,S,S,Y,
Zhang et al.\cite{zhang2010test} ,G, test data generation ,n/a,struc. (E),Y,exi.,exi.,," PexMutator, GenMutants ",well, manual invest. , weak mutation, C\# ,"P, S",S,Y,
Zhang et al.\cite{zhang2011empirical} , A , test-suite reduction , unit ,struc. ,Y,exi.,exi.,, MuJava ,well, n/a ,fixed number, Java ,"S, M",M,Y,
Zhou and Frankl\cite{zhou2011jdama} , A ," test data generation, test strategy evaluation ",n/a,struc. ,Y,exi.,exi.,, JDAMA (based on SQLMutation) ,well,"reduce likelihood, manual invest.", weak mutation," Java, sql",n/a,n/a,Y,
Offutt et al.\cite{offutt1995procedures},G,test-suite reduction,unit,struc. (E),Y,exi.,exi.,, Mothra,well,n/a,n/a,Fortran,P,P,N,
Rojas et al.\cite{rojas2015combining},G,test data generation,unit,"struc., struc. (E)",Y,exi.,exi.,,EvoSuite,well,n/a,n/a,java,M,M,N,
Polo et al.\cite{polo2007integrating},A,test data generation,unit,struc. ,Y,exi.,exi.,,MuJava,well,manual invest.,n/a,java,S,S,Y,
Vincenzi et al.\cite{vincenzi2001unit},G,test data generation,"unit, int.",struc. (E),Y,exi.,exi.,,"Proteum, Proteum/IM",well,manual invest.,selection strategy,C,S,S,Y,*
